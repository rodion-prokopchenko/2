{"version":3,"sources":["components/FeedbackOptions/FeedbackOprtions.js","components/Statisctics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["FeedbackOptions","submitFeedback","e","preventDefault","props","onLeaveFeedback","currentTarget","name","this","options","map","type","onClick","shortid","generate","Component","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","state","stat","checkTotal","title","children","App","positiveFeedback","updateFeedbacks","data","console","log","setState","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAkCeA,E,4MA7BbC,eAAiB,SAAAC,GACfA,EAAEC,iBAEF,EAAKC,MAAMC,gBAAgBH,EAAEI,cAAcC,O,uDAGnC,IAAD,OACP,OACE,mCACE,8BACGC,KAAKJ,MAAMK,QAAQC,KAAI,SAAAD,GAAO,OAC7B,wBACEE,KAAK,SAELC,QAAS,EAAKX,eACdM,KAAME,EAJR,SAMGA,GAJII,IAAQC,uB,GAdGC,aCkBfC,E,uKAfX,OACE,mCACE,+BACE,uCAAmCR,KAAKJ,MAAMa,OAArCJ,IAAQC,YACjB,0CAAsCN,KAAKJ,MAAMc,UAAxCL,IAAQC,YACjB,sCAAkCN,KAAKJ,MAAMe,MAApCN,IAAQC,YACjB,wCAAoCN,KAAKJ,MAAMgB,QAAtCP,IAAQC,YACjB,oDACqBN,KAAKJ,MAAMiB,qBADvBR,IAAQC,qB,GATFC,aCFV,SAASO,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,+BAAOA,I,ICuCDC,E,4MAlCbC,MAAQ,CACNL,MAAO,EAAKhB,MAAMgB,O,EAEpBM,KAAO,a,EAEPC,WAAa,WACX,GAAI,EAAKvB,MAAMwB,QAAU,EAAKF,MAAQ,EAAKtB,MAAMuB,aAC/C,OAAO,G,uDAMT,OACE,mCACE,oCACGnB,KAAKJ,MAAMwB,OACV,6BAA8BpB,KAAKJ,MAAMwB,OAAhCf,IAAQC,YAElBN,KAAKmB,aACJ,cAACL,EAAD,CAAcC,QAAS,yBAEvBf,KAAKJ,MAAMyB,WAPDhB,IAAQC,kB,GAhBRC,aCqEPe,E,4MAtEbL,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPW,iBAAkB,G,EAGpBC,gBAAkB,SAAAC,GAChBC,QAAQC,IAAIF,GACZC,QAAQC,IAAI,EAAKV,MAAML,OACvB,EAAKgB,UAAS,SAAAC,GAAc,IAAD,EACzB,OAAO,EAAP,iBACGJ,EAAOI,EAAUJ,GAAQ,GAD5B,sBAESI,EAAUjB,MAAQ,GAF3B,M,EAOJO,WAAa,WACX,OAAyB,IAArB,EAAKF,MAAML,QAGX,EAAKK,MAAML,OAEN,I,uDAYD,IAAD,EACiDZ,KAAKiB,MAArDR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOW,EAD5B,EAC4BA,iBAEnC,OACE,qCACE,cAAC,EAAD,CACEH,MAAM,wBACNC,SACE,cAAC,EAAD,CACEpB,QAAS,CAAC,OAAQ,UAAW,OAC7BJ,gBAAiBG,KAAKwB,oBAK5B,cAAC,EAAD,CACEJ,MAAM,aACND,WAAYnB,KAAKmB,WACjBE,SACE,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBU,a,GA9DhBhB,aCDlBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4648a6cc.chunk.js","sourcesContent":["import propTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nclass FeedbackOptions extends Component {\r\n  submitFeedback = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLeaveFeedback(e.currentTarget.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          {this.props.options.map(options => (\r\n            <button\r\n              type=\"button\"\r\n              key={shortid.generate()}\r\n              onClick={this.submitFeedback}\r\n              name={options}\r\n            >\r\n              {options}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: propTypes.array.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import propTypes from 'prop-types';\r\n\r\nimport shortid from 'shortid';\r\nimport React, { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul>\r\n          <li key={shortid.generate()}>Good:{this.props.good}</li>\r\n          <li key={shortid.generate()}>Neutral:{this.props.neutral}</li>\r\n          <li key={shortid.generate()}>Bad:{this.props.bad}</li>\r\n          <li key={shortid.generate()}>Total:{this.props.total}</li>\r\n          <li key={shortid.generate()}>\r\n            Positive feedback:{this.props.positivePercentage}\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Statistics;\r\n","import react from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <span>{message}</span>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: propTypes.string.isRequired,\r\n};\r\n","import propTypes from 'prop-types';\r\n\r\nimport shortid from 'shortid';\r\nimport React, { Component } from 'react';\r\n// import Statistics from '../Statisctics/Statistics';\r\n// import FeedbackOptions from '../FeedbackOptions/FeedbackOprtions';\r\nimport Notification from '../Notification/Notification';\r\n\r\nclass Section extends Component {\r\n  state = {\r\n    total: this.props.total,\r\n  };\r\n  stat = 'Statistics';\r\n\r\n  checkTotal = () => {\r\n    if (this.props.title === this.stat && this.props.checkTotal()) {\r\n      return true;\r\n    }\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section key={shortid.generate()}>\r\n          {this.props.title && (\r\n            <h2 key={shortid.generate()}>{this.props.title}</h2>\r\n          )}\r\n          {this.checkTotal() ? (\r\n            <Notification message={'There is no feedback'} />\r\n          ) : (\r\n            this.props.children\r\n          )}\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\n\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOprtions';\r\nimport Statistics from './components/Statisctics/Statistics';\r\nimport Section from './components/Section/Section';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positiveFeedback: 0,\r\n  };\r\n\r\n  updateFeedbacks = data => {\r\n    console.log(data);\r\n    console.log(this.state.total);\r\n    this.setState(prevState => {\r\n      return {\r\n        [data]: prevState[data] + 1,\r\n        total: prevState.total + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  checkTotal = () => {\r\n    if (this.state.total !== 0) {\r\n      return false;\r\n    }\r\n    if (this.state.total === 0);\r\n    {\r\n      return true;\r\n    }\r\n  };\r\n  // updatePositiveFeedback = () => {\r\n  //   this.setState(prevState => {\r\n  //     return {\r\n  //       [data]: prevState[data] + 1,\r\n  //       total: prevState.total + 1,\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, positiveFeedback } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Section\r\n          title=\"Please leave feedback\"\r\n          children={\r\n            <FeedbackOptions\r\n              options={['good', 'neutral', 'bad']}\r\n              onLeaveFeedback={this.updateFeedbacks}\r\n            />\r\n          }\r\n        ></Section>\r\n\r\n        <Section\r\n          title=\"Statistics\"\r\n          checkTotal={this.checkTotal}\r\n          children={\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positiveFeedback}\r\n            />\r\n          }\r\n        ></Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// const colorPickerOptions = [\r\n//   { label: 'red', color: '#F44336' },\r\n//   { label: 'green', color: '#4CAF50' },\r\n//   { label: 'blue', color: '#2196F3' },\r\n//   { label: 'grey', color: '#607D8B' },\r\n//   { label: 'pink', color: '#E91E63' },\r\n//   { label: 'indigo', color: '#3F51B5' },\r\n// ];\r\n\r\n// state = {\r\n//   todos: initialTodos,\r\n//   filter: '',\r\n// };\r\n\r\n// addTodo = text => {\r\n//   const todo = {\r\n//     id: shortid.generate(),\r\n//     text,\r\n//     completed: false,\r\n//   };\r\n\r\n//   this.setState(({ todos }) => ({\r\n//     todos: [todo, ...todos],\r\n//   }));\r\n// };\r\n\r\n// deleteTodo = todoId => {\r\n//   this.setState(prevState => ({\r\n//     todos: prevState.todos.filter(todo => todo.id !== todoId),\r\n//   }));\r\n// };\r\n\r\n// toggleCompleted = todoId => {\r\n//   // this.setState(prevState => ({\r\n//   //   todos: prevState.todos.map(todo => {\r\n//   //     if (todo.id === todoId) {\r\n//   //       return {\r\n//   //         ...todo,\r\n//   //         completed: !todo.completed,\r\n//   //       };\r\n//   //     }\r\n\r\n//   //     return todo;\r\n//   //   }),\r\n//   // }));\r\n\r\n//   this.setState(({ todos }) => ({\r\n//     todos: todos.map(todo =>\r\n//       todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\r\n//     ),\r\n//   }));\r\n// };\r\n\r\n// changeFilter = e => {\r\n//   this.setState({ filter: e.currentTarget.value });\r\n// };\r\n\r\n// getVisibleTodos = () => {\r\n//   const { filter, todos } = this.state;\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return todos.filter(todo =>\r\n//     todo.text.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\n// calculateCompletedTodos = () => {\r\n//   const { todos } = this.state;\r\n\r\n//   return todos.reduce(\r\n//     (total, todo) => (todo.completed ? total + 1 : total),\r\n//     0,\r\n//   );\r\n// };\r\n\r\n// render() {\r\n//   const { todos, filter } = this.state;\r\n//   const totalTodoCount = todos.length;\r\n//   const completedTodoCount = this.calculateCompletedTodos();\r\n//   const visibleTodos = this.getVisibleTodos();\r\n\r\n//   return (\r\n//     <Container>\r\n//       {/* TODO: вынести в отдельный компонент */}\r\n\r\n//       <div>\r\n//         <p>Всего заметок: {totalTodoCount}</p>\r\n//         <p>Выполнено: {completedTodoCount}</p>\r\n//       </div>\r\n\r\n//       <TodoEditor onSubmit={this.addTodo} />\r\n\r\n//       <Filter value={filter} onChange={this.changeFilter} />\r\n\r\n//       <TodoList\r\n//         todos={visibleTodos}\r\n//         onDeleteTodo={this.deleteTodo}\r\n//         onToggleCompleted={this.toggleCompleted}\r\n//       />\r\n//     </Container>\r\n//   );\r\n// }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}